{"version":3,"sources":["actionTypes.js","actions/index.js","components/AddTodo.js","selectors.js","components/DeleteAll.js","components/App.js","reducers/todos.js","reducers/filters.js","reducers/index.js","index.js"],"names":["ADD_TODO","DELETE_TODO","DELETE_ALL","TOGGLE_TODO","SET_FILTER","setFilter","filter","type","payload","TodoItem","styled","li","props","$isDone","FunctionBlock","div","AddTodo","todos","dispatch","useState","value","setValue","onChange","e","target","onClick","content","todo","name","isDone","map","id","selectTodos","store","todoReducer","selectFilters","filterReducer","Button","button","DeleteAll","App","useSelector","useDispatch","todoId","initialState","state","action","combineReducers","filters","ReactDOM","render","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.fffd05f7.chunk.js","sourcesContent":["export const ADD_TODO = 'add_todo';\nexport const DELETE_TODO = 'delete_todo';\nexport const DELETE_ALL = 'delete_all';\nexport const TOGGLE_TODO = 'toggle_todo';\n\nexport const SET_FILTER = 'set_filter';\n","import {\n  ADD_TODO,\n  DELETE_ALL,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  SET_FILTER,\n} from '../actionTypes';\n\n// Action creator\nexport const addTodo = (todo) => {\n  // Return an action\n  return {\n    type: ADD_TODO,\n    payload: {\n      content: todo,\n    },\n  };\n};\n\nexport const deleteTodo = (id) => {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    },\n  };\n};\n\nexport const deleteAll = () => {\n  return {\n    type: DELETE_ALL,\n  };\n};\n\nexport const toggleTodo = (id) => {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id,\n    },\n  };\n};\n\nexport const setFilter = (filter) => {\n  return {\n    type: SET_FILTER,\n    payload: {\n      filter,\n    },\n  };\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { addTodo, deleteTodo, setFilter, toggleTodo } from '../actions';\n\nconst TodoItem = styled.li`\n  ${(props) => props.$isDone && `text-decoration: line-through`}\n`;\n\nconst FunctionBlock = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\n\nconst AddTodo = ({ todos, dispatch, filter }) => {\n  const [value, setValue] = useState('');\n\n  return (\n    <div>\n      <input\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n        value={value}\n      ></input>\n      <button\n        onClick={() => {\n          dispatch(addTodo(value));\n          setValue('');\n        }}\n      >\n        add todo\n      </button>\n      <FunctionBlock>\n        <button\n          onClick={() => {\n            dispatch(setFilter('all'));\n          }}\n        >\n          全部\n        </button>\n        <button\n          onClick={() => {\n            dispatch(setFilter('isDone'));\n          }}\n        >\n          已完成\n        </button>\n        <button\n          onClick={() => {\n            dispatch(setFilter('unDone'));\n          }}\n        >\n          未完成\n        </button>\n      </FunctionBlock>\n      <ul>\n        {todos\n          .filter((todo) => {\n            if (filter.name === 'all') {\n              return todo;\n            }\n            if (filter.name === 'isDone') {\n              return todo.isDone;\n            }\n            if (filter.name === 'unDone') {\n              return !todo.isDone;\n            }\n            return todo;\n          })\n          .map((todo) => (\n            <TodoItem key={todo.id} $isDone={todo.isDone}>\n              {todo.name}\n              <button\n                onClick={() => {\n                  dispatch(toggleTodo(todo.id));\n                }}\n              >\n                {todo.isDone ? '已完成' : '未完成'}\n              </button>\n              <button\n                onClick={() => {\n                  dispatch(deleteTodo(todo.id));\n                }}\n              >\n                刪除\n              </button>\n            </TodoItem>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AddTodo;\n","export const selectTodos = (store) => store.todoReducer.todos;\n\nexport const selectFilters = (store) => store.filterReducer.filter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { deleteAll } from '../actions';\n\nconst Button = styled.button`\n  color: white;\n  background-color: red;\n  border: none;\n  padding: 10px 20px;\n\n  &:hover {\n    color: black;\n    cursor: pointer;\n  }\n`;\n\nconst DeleteAll = ({ dispatch }) => {\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          dispatch(deleteAll());\n        }}\n      >\n        刪除全部\n      </Button>\n    </div>\n  );\n};\n\nexport default DeleteAll;\n","import React from 'react';\nimport AddTodo from './AddTodo';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilters, selectTodos } from '../selectors';\nimport DeleteAll from './DeleteAll';\nimport styled from 'styled-components';\n\nconst FunctionBlock = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n`;\n\nconst App = () => {\n  // useSelector((store) => store.todoReducer.todos)\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <FunctionBlock>\n        <DeleteAll todos={todos} dispatch={dispatch} />\n      </FunctionBlock>\n      <AddTodo filter={filter} todos={todos} dispatch={dispatch} />\n    </div>\n  );\n};\n\nexport default App;\n","import { ADD_TODO, DELETE_ALL, DELETE_TODO, TOGGLE_TODO } from '../actionTypes';\n\nlet todoId = 0;\n\nconst initialState = {\n  todos: [],\n};\n\nconst todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        todos: [\n          ...state.todos,\n          {\n            name: action.payload.content,\n            id: todoId++,\n            isDone: false,\n          },\n        ],\n      };\n    }\n    case DELETE_TODO: {\n      return {\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id),\n      };\n    }\n    case DELETE_ALL: {\n      return {\n        todos: [],\n      };\n    }\n\n    case TOGGLE_TODO: {\n      return {\n        todos: state.todos.map((todo) => {\n          if (todo.id === action.payload.id) {\n            return {\n              ...todo,\n              isDone: !todo.isDone,\n            };\n          }\n          return todo;\n        }),\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default todoReducer;\n","import { SET_FILTER } from '../actionTypes';\n\nconst initialState = {\n  filter: { name: 'all' },\n};\n\nconst filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER: {\n      return {\n        filter: { name: action.payload.filter },\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport filters from './filters';\n\nexport default combineReducers({\n  todoReducer: todos,\n  filterReducer: filters,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}